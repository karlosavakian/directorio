from django.shortcuts import render, get_object_or_404
from django.shortcuts import redirect 
from django.contrib.auth import login
from .forms import RegistroUsuarioForm
from django.contrib.auth.decorators import login_required 
from .models import Club 
from .models import Rese침a 
from django.contrib import messages  
from django.db.models import Q, Count, Avg, F, ExpressionWrapper, FloatField 
from django.db.models.functions import Round
from .forms import Rese침aForm




  
from django.contrib.auth import get_user_model 

def home(request):
    search_query = request.GET.get('q', '').strip()
    return render(request, 'clubs/home.html', {
        'search_query': search_query,
    })


def register(request):
    if request.method == 'POST':
        form = RegistroUsuarioForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect('home')
    else:
        form = RegistroUsuarioForm()
    
    return render(request, 'registration/register.html', {'form': form})

 
def search_results(request):
    search_query = request.GET.get('q', '').strip()
    selected_category = request.GET.get('category', '').strip()
    sort_option = request.GET.get('sort', '').strip()

    clubs = Club.objects.all()

    if search_query:
        clubs = clubs.filter(
            Q(name__icontains=search_query) |
            Q(city__icontains=search_query) |
            Q(address__icontains=search_query)
        )

    if selected_category:
        clubs = clubs.filter(category=selected_category)

    average_expr = ExpressionWrapper(
        (F('rese침as__instalaciones') + F('rese침as__entrenadores') +
        F('rese침as__ambiente') + F('rese침as__calidad_precio') +
        F('rese침as__variedad_clases')) / 5.0,
        output_field=FloatField()
    )


    clubs = clubs.annotate(
        average_rating=Round(Avg(average_expr), precision=1),  # 游녣 solo 1 decimal
        reviews_count=Count('rese침as')
    )

    if sort_option == 'rating':
        clubs = clubs.order_by('-average_rating')
    elif sort_option == 'reviews':
        clubs = clubs.order_by('-reviews_count')
    elif sort_option == 'recent':
        clubs = clubs.order_by('-created_at')

    return render(request, 'clubs/search_results.html', {
        'clubs': clubs,
        'search_query': search_query,
        'selected_category': selected_category,
        'sort_option': sort_option,
        'back_url': request.META.get('HTTP_REFERER', '/'),
    }) 



def club_profile(request, slug):
    club = get_object_or_404(Club, slug=slug)
    rese침as = club.rese침as.select_related('usuario').all()
    detallado = club.get_detailed_ratings()

    rese침a_existente = None
    if request.user.is_authenticated:
        rese침a_existente = club.rese침as.filter(usuario=request.user).first()

    form = Rese침aForm()
    if request.method == 'POST' and not rese침a_existente:
        form = Rese침aForm(request.POST)
        if form.is_valid():
            nueva = form.save(commit=False)
            nueva.club = club
            nueva.usuario = request.user
            nueva.save()
            messages.success(request, "Gracias por tu valoraci칩n, ser치 publicada en breve.")
            return redirect('club_profile', slug=slug)

    return render(request, 'clubs/club_profile.html', {
        'club': club,
        'rese침as': rese침as,
        'form': form,
        'rese침a_existente': rese침a_existente,
        'detallado': detallado,
        
    })


@login_required
def dejar_rese침a(request, slug):
    club = get_object_or_404(Club, slug=slug)

    if request.method == 'POST':
        form = Rese침aForm(request.POST)
        if form.is_valid():
            rese침a = form.save(commit=False)
            rese침a.club = club
            rese침a.usuario = request.user
            rese침a.stars = rese침a.promedio()  # nota calculada autom치ticamente
            rese침a.save()
            messages.success(request, '춰Gracias por dejar tu rese침a!')
            return redirect('club_profile', slug=slug)
    else:
        form = Rese침aForm()

    return render(request, 'clubs/dejar_rese침a.html', {'club': club, 'form': form})


@login_required
def editar_rese침a(request, rese침a_id):
    rese침a = get_object_or_404(Rese침a, id=rese침a_id, usuario=request.user)
    if request.method == 'POST':
        form = Rese침aForm(request.POST, instance=rese침a)
        if form.is_valid():
            form.save()
            return redirect('club_profile', slug=rese침a.club.slug)
    else:
        form = Rese침aForm(instance=rese침a)
    return render(request, 'clubs/editar_rese침a.html', {'form': form, 'rese침a': rese침a})

@login_required
def eliminar_rese침a(request, rese침a_id):
    rese침a = get_object_or_404(Rese침a, id=rese침a_id, usuario=request.user)
    club_slug = rese침a.club.slug
    if request.method == 'POST':
        rese침a.delete()
        return redirect('club_profile', slug=club_slug)

@login_required
def mis_rese침as(request):
    rese침as = Rese침a.objects.filter(usuario=request.user)
    return render(request, 'clubs/mis_rese침as.html', {'rese침as': rese침as})